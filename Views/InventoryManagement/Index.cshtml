@model IEnumerable<InventoryManagement.ViewModel.ProductsListVM>

@{
    ViewData["Title"] = "Product Inventory";
}
<form method="get" class="row g-3 align-items-end mb-4 shadow-sm p-3 bg-light rounded">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">Inventory Management System</h2>
        <a asp-action="Create" class="btn btn-success">+ Add Product</a>
    </div>
    <div class="col-md-4">
        <label for="CategoryName" class="form-label fw-semibold text-primary">Filter by Category</label>
        <select name="CategoryName" id="CategoryName" class="form-select">
            <option value="">All Categories</option>
            @foreach (var bg in Enum.GetNames(typeof(ProductCategory)))
            {
                <option value="@bg">@bg</option>
            }
        </select>
    </div>

    <div class="col-md-4">
        <label for="ProductName" class="form-label fw-semibold text-primary">Search Products</label>
        <input type="text" name="ProductName" id="ProductName" class="form-control" placeholder="Enter product name..." />
    </div>

    <div class="col-md-4 d-flex align-items-end">
        <button type="submit" class="btn btn-outline-primary w-100">
            🔍 Search
        </button>
    </div>
</form>

<div class="container mt-4 shadow-sm p-3 bg-light rounded">
    <table class="table table-bordered table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Id)</th>
                <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                <th>@Html.DisplayNameFor(model => model.First().Category)</th>
                <th>@Html.DisplayNameFor(model => model.First().Price)</th>
                <th>@Html.DisplayNameFor(model => model.First().Quantity)</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category)</td>
                    <td>@item.Price.ToString("0.00")</td>
                    <td>@item.Quantity</td>
                    <td>
                        @if (item.Quantity == 0)
                        {
                            <span class="badge bg-danger">Stock Out</span>
                        }
                        else if (item.Quantity <= 10)
                        {
                            <span class="badge bg-warning text-dark">Low Stock</span>
                        }
                        else
                        {
                            <span class="badge bg-success">In Stock</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary me-1">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info text-white me-1">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
